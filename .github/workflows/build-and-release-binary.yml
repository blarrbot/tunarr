name: Build & Publish Binaries

on:
  workflow_dispatch:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  schedule:
    - cron: '0 13-21/2 * * *' # every 2 hours during US Eastern daytime

jobs:
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8.15.4
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build server
        run: pnpm turbo typecheck --filter=@tunarr/server

      - name: Build web
        run: pnpm turbo typecheck --filter=@tunarr/web
  build:
    needs: typecheck
    strategy:
      matrix:
        os:
          - name: macos-13
            target_name: macos
          - name: ubuntu-latest
            target_name: linux
          - name: windows-latest
            target_name: windows
        node_version: [20.11.1]
    runs-on: ${{matrix.os.name}}
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # Checkout code from repository
        with:
          ref: dev

      - uses: ilammy/setup-nasm@v1

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8.15.4
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: 'Create env file'
        run: |
          touch server/.env
          echo TUNARR_BUILD="$(git rev-parse --short ${{ github.sha }})" >> server/.env
          echo TUNARR_EDGE_BUILD=true
          cat server/.env
        if: github.ref == format('refs/heads/{0}', 'dev') && (github.event_name == 'workflow_dispatch' || github.event_name == 'schedule')

      - name: Bundle server
        run: pnpm turbo bundle --filter=@tunarr/server

      - name: Bundle web
        run: pnpm turbo bundle --filter=@tunarr/web

      - name: Build Executable
        run: pnpm run --filter=server make-exec:${{ matrix.os.target_name }}

      - name: Upload Edge Binary
        uses: softprops/action-gh-release@v2
        with:
          name: Tunarr Edge
          tag_name: edge
          prerelease: true
          files: |
            ./server/build/tunarr-${{ matrix.os.target_name }}-x64.zip*
        if: github.ref == format('refs/heads/{0}', 'dev') && (github.event_name == 'workflow_dispatch' || github.event_name == 'schedule')

      - name: Upload Binaries
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./server/build/tunarr-${{ matrix.os.target_name }}-x64.zip*
        if: startsWith(github.ref, 'refs/tags/')
